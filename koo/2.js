/* 문제 설명

AI은행은 24시간 무인점포 운영을 계획하고 있습니다.
해당 점포는 무인 키오스크(터치스크린 방식의 종합 정보 안내 시스템)가 고객을 응대하여 업무를 처리합니다.
고객이 점포에 도착한 후 번호표를 뽑으면, 업무처리를 도와줄 키오스크를 매칭받을 수 있습니다.
점포에 설치되어 있는 키오스크 n대는 1부터 n번까지 고유번호가 매겨져 있으며,
고객은 아래와 같은 규칙으로 키오스크와 매칭됩니다.
고객이 점포에 도착한 시간 순으로 키오스크와 매칭됩니다.
현재 운영되지 않는 키오스크가 있다면, 고객들의 업무를 완료한 후 현재 시각까지 운영되지 않은 시간이 가장 긴 키오스크와 매칭됩니다.
2-1. 운영되지 않은 시간이 가장 긴 키오스크가 여러 대라면, 그 중에서 고유번호가 낮은 키오스크와 매칭됩니다.
2-2. 고객은 점포에 도착하자마자 매칭된 키오스크와 업무를 시작할 수 있습니다.
모든 키오스크가 운영되고 있다면, 고객은 가장 일찍 운영이 종료될 예정인 키오스크와 매칭됩니다.
3-1. 가장 일찍 운영이 종료될 키오스크가 여러 대라면, 그 중에서 고유번호가 낮은 키오스크와 매칭됩니다.
3-2. 키오스크는 먼저 매칭된 고객들의 업무부터 차례대로 처리합니다.
점포에서 업무를 처리할 수 있는 키오스크의 개수 n, 고객의 정보가 담긴 배열 customers가 매개변수로 주어집니다.
이 때 가장 많은 고객과 매칭되는 키오스크는 몇 명의 고객과 매칭되는지 계산해서 return 하도록 solution함수를 작성해주세요.

제한사항
n은 100 이하인 자연수입니다.
customers의 길이는 1 이상 10,000 이하입니다.
customers의 원소는 도착날짜 도착시간 소요시간 형식입니다.
customers의 원소는 일찍 도착한 고객부터 차례대로 정렬되어 있습니다.
도착날짜, 도착시간, 소요시간은 하나의 공백으로 구분되어 있습니다.
도착날짜와 도착시간은 고객이 은행에 도착한 날짜와 시간입니다.
동시에 도착하는 고객들은 입력으로 주어지지 않습니다.
도착날짜는 MM/DD 형식이며, 01/01에서 12/31 사이입니다.
윤년은 존재하지 않는다고 가정합니다. 즉, 2월은 항상 02/01에서 02/28 사이입니다.
도착시간은 HH:MM:SS 형식이며, 00:00:00 에서 23:59:59 사이입니다.
잘못된 날짜(02/30, 11/31 등)나 잘못된 시간(26:42:61, 13:76:10 등)은 입력으로 주어지지 않습니다.
소요시간은 고객의 업무를 처리하는데 소요되는 시간(분)입니다.
소요시간은 MM 형식이며, 01에서 59 사이입니다.
즉, 고객의 업무 처리에 걸리는 시간은 01분 이상 59분 이하입니다.

입출력 예
n	customers	            result
3	["10/01 23:20:25 30",
    "10/01 23:25:50 26",
    "10/01 23:31:00 05",
    "10/01 23:33:17 24",
    "10/01 23:50:25 13",
    "10/01 23:55:45 20",
    "10/01 23:59:39 03",
    "10/02 00:10:00 10"]	4
2	["02/28 23:59:00 03",
    "03/01 00:00:00 02",
    "03/01 00:05:00 01"]	2

입출력 예 설명
입출력 예 #1
고객 도착	매칭 키오스크	키오스크 운영 시작	소요 시간(분)	키오스크 운영 완료(예정)	설명
10-01 23:20:25	1	10-01 23:20:25	30	10-01 23:50:25	운영되지 않는 1, 2, 3번 키오스크중에 고유번호가 낮은 1번 키오스크와 매칭됩니다.
10-01 23:25:50	2	10-01 23:25:50	26	10-01 23:51:50	운영되지 않는 2, 3번 키오스크중에 고유번호가 낮은 2번 키오스크와 매칭됩니다.
10-01 23:31:00	3	10-01 23:31:00	05	10-01 23:36:00	유일하게 운영되지 않는 3번 키오스크와 매칭됩니다.
10-01 23:33:17	3	10-01 23:36:00	24	10-02 00:00:00	모든 키오스크가 운영되고 있습니다. 3번 키오스크의 종료 예정시간이 가장 이르므로, 3번 키오스크와 매칭됩니다.
10-01 23:50:25	1	10-01 23:50:25	13	10-02 00:03:25	유일하게 운영되지 않는 1번 키오스크와 매칭됩니다.
10-01 23:55:45	2	10-01 23:55:45	20	10-02 00:15:45	유일하게 운영되지 않는 2번 키오스크와 매칭됩니다.
10-01 23:59:39	3	10-02 00:00:00	03	10-02 00:03:00	모든 키오스크가 운영되고 있습니다. 3번 키오스크의 종료 예정 시간이 가장 이르므로, 3번 키오스크와 매칭됩니다.
10-02 00:10:00	3	10-02 00:10:00	10	10-02 00:20:00	1, 3번 키오스크가 운영되지 않고 있습니다. 1번 키오스크는 6분 35초, 3번 키오스크는 7분 동안 운영되지 않았으므로, 3번 키오스크와 매칭됩니다.
3번 키오스크가 가장 많은 4명의 고객과 매칭되므로, 4를 return 해주어야 합니다.
입출력 예 #2
고객 도착	매칭 키오스크	키오스크 운영 시작	소요 시간(분)	키오스크 운영 완료(예정)	설명
02/28 23:59:00	1	02/28 23:59:00	03	03/01 00:02:00	운영되지 않는 1, 2번 키오스크중에 고유번호가 낮은 1번 키오스크와 매칭됩니다.
03/01 00:00:00	2	03/01 00:00:00	02	03/01 00:02:00	유일하게 운영되지 않는 2번 키오스크와 매칭됩니다.
03/01 00:05:00	1	03/01 00:05:00	01	03/01 00:06:00	1, 2번 키오스크가 모두 3분 동안 운영되지 않고 있습니다. 고유번호가 낮은 1번 키오스크와 매칭됩니다.
1번 키오스크가 가장 많은 2명의 고객과 매칭되므로, 2를 return 해주어야 합니다.
*/

function solution(n, customers) {
  let key = Array(n).fill(0);
  console.log(key);
  for (const customer of customers) {
    const customerData = customer.split(" ");
    console.log(customerData);
  }
}

solution(3, [
  "10/01 23:20:25 30",
  "10/01 23:25:50 26",
  "10/01 23:31:00 05",
  "10/01 23:33:17 24",
  "10/01 23:50:25 13",
  "10/01 23:55:45 20",
  "10/01 23:59:39 03",
  "10/02 00:10:00 10",
]);
